name: Rust CI

on:
  pull_request:
  push:
    branches:
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - ".github/workflows/ci.yml"

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1

      - uses: actions/checkout@v2

      - name: Log versions
        run: cargo --version

      - name: Build release
        run: cargo build --release --locked --all-targets

      - name: Test release
        run: cargo test --release --locked --all-targets

      - name: Run examples
        if: startsWith(matrix.os, 'ubuntu')
        env:
          SFLYN_PATH: ./
        run: |
          echo "For examples"
          cargo run ./examples/for/array.sf
          cargo run ./examples/for/hashmap.sf
          echo "Functions examples"
          cargo run ./examples/functions/callback.sf
          cargo run ./examples/functions/double.sf
          cargo run ./examples/functions/less_or_greater.sf
          cargo run ./examples/functions/say_hi.sf
          cargo run ./examples/functions/pow_default_value.sf
          echo "Interfaces examples"
          cargo run ./examples/interfaces/label.sf
          echo "Modules examples"
          cargo run ./examples/modules/basic/index.sf
          echo "Variables examples"
          cargo run ./examples/variables/arrays.sf
          cargo run ./examples/variables/booleans.sf
          cargo run ./examples/variables/const.sf
          cargo run ./examples/variables/numbers.sf
          cargo run ./examples/variables/strings.sf
          echo "Hello world example"
          cargo run ./examples/hello_world.sf
