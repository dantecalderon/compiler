name: Publish

on:
  push:
    repository: 'sflynlang/compiler'
    branches:
      - main
    tags:
      - v*.*.*

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1

      - uses: actions/checkout@v2

      - name: Log versions
        run: cargo --version

      - name: Build release
        run: cargo build --release --locked --all-targets

      - name: Create source code (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          mkdir -p target/release
          zip -r target/release/sflynlang-src.zip docs/* std/* CHANGELOG.md LICENSE README.md

      - name: Pre-release (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          cd target/release
          zip -r sflynlang-x86_64-unknown-linux-gnu.zip sflynlang

      - name: Pre-release (Windows)
        if: startsWith(matrix.os, 'windows')
        run: Compress-Archive -CompressionLevel Optimal -Force -Path target/release/sflynlang.exe -DestinationPath target/release/sflynlang-x86_64-pc-windows-msvc.zip

      - name: Pre-release (MacOS)
        if: startsWith(matrix.os, 'macOS')
        run: |
          cd target/release
          zip -r sflynlang-x86_64-apple-darwin.zip sflynlang

      - name: Create the release draft
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/sflynlang-src.zip
            target/release/sflynlang-x86_64-unknown-linux-gnu.zip
            target/release/sflynlang-x86_64-pc-windows-msvc.zip
            target/release/sflynlang-x86_64-apple-darwin.zip
          draft: true

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
